snippet RulePack
    <?xml version="1.0" encoding="UTF-8"?>
    <RulePack xmlns="xmlns://www.fortifysoftware.com/schema/rules"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="RulePack">
        <RulePackID>`pyeval("str(uuid.uuid4()).upper()")`</RulePackID>
        <SKU>`pyeval("str(uuid.uuid4()).upper()")`</SKU>
        <Name><![CDATA[${1:name}]]></Name>
        <Version>1.0</Version>
        <Description><![CDATA[${2:description}]]></Description>
        <Rules version="3.2">
            <RuleDefinitions>${3:body}</RuleDefinitions>
        </Rules>
    </RulePack>


snippet ControlFlowRule
    <ControlflowRule formatVersion="${1:format version}" language="${2:language}">
        <RuleID>`pyeval("str(uuid.uuid4()).upper()")`</RuleID>
        <VulnKingdom>${3:kingdom}</VulnKingdom>
        <VulnCategory>${4:category}</VulnCategory>
        <VulnSubcategory>${5:subcategory}</VulnSubcategory>
        <DefaultSeverity>${6:default severity}</DefaultSeverity>
        <Description ref="${7:description}"/>
        <FunctionIdentifier id="${8:function identifier}">
            <NamespaceName>
                <Value>${9:namespace}</Value>
            </NamespaceName>
            <ClassName>
                <Value>${10:class}</Value>
            </ClassName>
            <FunctionName>
                <Value>${11:function}</Value>
            </FunctionName>
            <ApplyTo implements="true" overrides="true" extends="true"/>
        </FunctionIdentifier>
        <Definition><![CDATA[${12:body}]]></Definition>
    </ControlflowRule>

snippet CharacterizationRule
    <CharacterizationRule formatVersion="${1:format version}" language="${2:language}">
        <MetaInfo>
            <Group name="package">${3:package}</Group>
        </MetaInfo>
        <RuleID>`pyeval("str(uuid.uuid4()).upper()")`</RuleID>
        <StructuralMatch><![CDATA[${4:predicate}]]></StructuralMatch>
        <Definition><![CDATA[${5:definition}]]></Definition>
    </CharacterizationRule>

snippet CallsRule
options indent
    <CharacterizationRule formatVersion="${1:format version}" language="${2:language}">
        <MetaInfo>
            <Group name="package">${3:package}</Group>
        </MetaInfo>
        <RuleID>`pyeval("str(uuid.uuid4()).upper()")`</RuleID>
        <StructuralMatch><![CDATA[
			FunctionCall: 
				possibleTargets contains [Function:
					name == "${4:function}"
					and enclosingClass.supers contains [Class: 
						name == "${5:class}"
					]
				]
				and arguments[${6:arg}] is [Expression lambda:]
		]]></StructuralMatch>
		<Definition><![CDATA[
			Calls(lambda${7:args})
		]]></Definition>
	</CharacterizationRule>

snippet CallsReturnsRule
options indent
    <CharacterizationRule formatVersion="${1:format version}" language="${2:language}">
        <MetaInfo>
            <Group name="package">${3:package}</Group>
        </MetaInfo>
        <RuleID>`pyeval("str(uuid.uuid4()).upper()")`</RuleID>
        <StructuralMatch><![CDATA[
			FunctionCall: 
				possibleTargets contains [Function:
					name == "${4:function}"
					and enclosingClass.supers contains [Class: 
						name == "${5:class}"
					]
				]
				and arguments[${6:arg}] is [Expression lambda:]
		]]></StructuralMatch>
		<Definition><![CDATA[
			CallsReturns(lambda${7:args})
		]]></Definition>
	</CharacterizationRule>

snippet StructuralRule
    <StructuralRule formatVersion="${1:format version}" language="${2:language}">
        <MetaInfo>
            <Group name="package">${3:package}</Group>
        </MetaInfo>
        <RuleID>`pyeval('str(uuid.uuid4()).upper()')`</RuleID>
        <VulnKingdom>${4:kingdom}</VulnKingdom>
        <VulnCategory>${5:category}</VulnCategory>
        <VulnSubcategory>${6:subcategory}</VulnSubcategory>
        <DefaultSeverity>${7:default severity}</DefaultSeverity>
        <Description ref="${8:description}"/>
        <Predicate><![CDATA[${9:body}]]></Predicate>
    </StructuralRule>

snippet DataflowSourceRule
    <DataflowSourceRule formatVersion="${1:format version}" language="${2:language}">
        <MetaInfo>
            <Group name="package">${3:package}</Group>
            <Group name="inputsource">${4:inputsource}</Group>
        </MetaInfo>
        <RuleID>`pyeval("str(uuid.uuid4()).upper()")`</RuleID>
        <TaintFlags>${5:taint flags}</TaintFlags>
        <FunctionIdentifier>
            <NamespaceName>
                <Value>${6:namespace}</Value>
            </NamespaceName>
            <ClassName>
                <Value>${7:class}</Value>
            </ClassName>
            <FunctionName>
                <Value>${8:function}</Value>
            </FunctionName>
            <ApplyTo implements="true" overrides="true" extends="true"/>
        </FunctionIdentifier>
        <OutArguments>${9:out arguments}</OutArguments>
    </DataflowSourceRule>

snippet DataflowSinkRule
    <DataflowSinkRule formatVersion="${1:format version}" language="${2:language}">
        <MetaInfo>
            <Group name="package">${3:package}</Group>
        </MetaInfo>
        <RuleID>`pyeval("str(uuid.uuid4()).upper()")`</RuleID>
        <VulnKingdom>${4:kingdom}</VulnKingdom>
        <VulnCategory>${5:category}</VulnCategory>
        <VulnSubcategory>${6:subcategory}</VulnSubcategory>
        <DefaultSeverity>${7:default severity}</DefaultSeverity>
        <Description ref="${8:description}"/>
        <Sink>
            <InArguments>${9:in arguments}</InArguments>
        </Sink>
        <FunctionIdentifier>
            <NamespaceName>
                <Value>${10:namespace}</Value>
            </NamespaceName>
            <ClassName>
                <Value>${11:class}</Value>
            </ClassName>
            <FunctionName>
                <Value>${12:function}</Value>
            </FunctionName>
            <ApplyTo implements="true" overrides="true" extends="true"/>
        </FunctionIdentifier>
    </DataflowSinkRule>

snippet DataflowPassthroughRule
    <DataflowPassthroughRule formatVersion="${1:format version}" language="${2:language}">
        <MetaInfo>
            <Group name="package">${3:package}</Group>
        </MetaInfo>
        <RuleID>`pyeval("str(uuid.uuid4()).upper()")`</RuleID>
        <FunctionIdentifier>
            <NamespaceName>
                <Value>${4:namespace}</Value>
            </NamespaceName>
            <ClassName>
                <Value>${5:class}</Value>
            </ClassName>
            <FunctionName>
                <Value>${6:function}</Value>
            </FunctionName>
            <ApplyTo implements="true" overrides="true" extends="true"/>
        </FunctionIdentifier>
        <InArguments>${7:in arguments}</InArguments>
        <OutArguments>${8:out arguments}</OutArguments>
    </DataflowPassthroughRule>

snippet DataflowEntrypointRule
    <DataflowEntryPointRule formatVersion="${1:format version}" language="${2:language}">
        <MetaInfo>
            <Group name="package">${3:package}</Group>
            <Group name="inputsource">${4:inputsource}</Group>
        </MetaInfo>
        <RuleID>`pyeval("str(uuid.uuid4()).upper()")`</RuleID>
        <TaintFlags>${5:taint flags}</TaintFlags>
        <FunctionIdentifier>
            <NamespaceName>
                <Value>${6:namespace}</Value>
            </NamespaceName>
            <ClassName>
                <Value>${8:class}</Value>
            </ClassName>
            <FunctionName>
                <Value>${9:function}</Value>
            </FunctionName>
            <ApplyTo implements="true" overrides="true" extends="true"/>
        </FunctionIdentifier>
        <InArguments>${10:in arguments}</InArguments>
    </DataflowEntryPointRule>

snippet DataflowCleanseRule
    <DataflowCleanseRule formatVersion="${1:format version}" language="${2:language}">
        <MetaInfo>
            <Group name="package">${3:package}</Group>
        </MetaInfo>
        <RuleID>`pyeval("str(uuid.uuid4()).upper()")`</RuleID>
        <TaintFlags>${4:taint flags}</TaintFlags>
        <FunctionIdentifier>
            <NamespaceName>
                <Value>${5:namespace}</Value>
            </NamespaceName>
            <ClassName>
                <Value>${6:class}</Value>
            </ClassName>
            <FunctionName>
                <Value>${7:function}</Value>
            </FunctionName>
            <ApplyTo implements="true" overrides="true" extends="true"/>
        </FunctionIdentifier>
        <OutArguments>${8:out arguments}</OutArguments>
    </DataflowCleanseRule>

snippet SuppressionRule
    <SuppressionRule formatVersion="${1:format version}" language="${2:language}">
        <MetaInfo>
            <Group name="package">${3:package}</Group>
        </MetaInfo>
        <RuleID>${4:ruleid}</RuleID>
    </SuppressionRule>

snippet Description 
    <Description>
        <Explanation><![CDATA[
            <Paragraph><Replace key="$${1:expression}$"/></Paragraph>
        ]]></Explanation>
    </Description>
